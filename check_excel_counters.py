#!/usr/bin/env python
"""
ุณูุฑูุจุช ููุชุญูู ูู ุงูุนุฏุงุฏุงุช ูู ููู Excel ููุงุจู ูุงุนุฏุฉ ุงูุจูุงูุงุช
"""

import os
import sys
import django
import pandas as pd

# ุฅุนุฏุงุฏ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mosa3adat_project.settings')
django.setup()

from basic_data.models import Guardian
from utils.excel_utils import clean_national_id

def check_excel_vs_database(excel_file_path):
    """ููุงุฑูุฉ ุงูุนุฏุงุฏุงุช ูู ููู Excel ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    
    print("=" * 80)
    print("ูุญุต ุงูุนุฏุงุฏุงุช: ููู Excel ููุงุจู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
    print("=" * 80)
    
    try:
        # ูุฑุงุกุฉ ููู Excel
        df = pd.read_excel(excel_file_path, sheet_name=0)
        print(f"ุชู ูุฑุงุกุฉ {len(df)} ุณุฌู ูู ููู Excel")
        
        # ุงูุชุญูู ูู ูุฌูุฏ ุงูุฃุนูุฏุฉ ุงููุทููุจุฉ
        required_columns = ['ุฑูู ุงููููุฉ', 'ุงุณู ููู ุงูุฃูุฑ', 'ุนุฏุฏ ุงูุฃุจูุงุก', 'ุนุฏุฏ ุงูุฒูุฌุงุช']
        missing_columns = [col for col in required_columns if col not in df.columns]
        
        if missing_columns:
            print(f"โ ุฃุนูุฏุฉ ููููุฏุฉ ูู ููู Excel: {missing_columns}")
            return
        
        print("โ ุฌููุน ุงูุฃุนูุฏุฉ ุงููุทููุจุฉ ููุฌูุฏุฉ")
        print()
        
        # ุฅุญุตุงุฆูุงุช
        found_in_db = 0
        not_found_in_db = 0
        counters_match = 0
        counters_mismatch = 0
        
        mismatches = []
        
        print("ุงูุชุญูู ูู ูู ุณุฌู...")
        print("-" * 80)
        
        for index, row in df.iterrows():
            if pd.isna(row['ุฑูู ุงููููุฉ']):
                continue
                
            national_id = clean_national_id(row['ุฑูู ุงููููุฉ'])
            name = row['ุงุณู ููู ุงูุฃูุฑ']
            
            # ุงูุนุฏุงุฏุงุช ูู Excel
            children_excel = int(row['ุนุฏุฏ ุงูุฃุจูุงุก']) if not pd.isna(row['ุนุฏุฏ ุงูุฃุจูุงุก']) else 0
            wives_excel = int(row['ุนุฏุฏ ุงูุฒูุฌุงุช']) if not pd.isna(row['ุนุฏุฏ ุงูุฒูุฌุงุช']) else 0
            family_excel = 1 + children_excel + wives_excel
            
            try:
                guardian = Guardian.objects.get(national_id=national_id)
                found_in_db += 1
                
                # ุงูุนุฏุงุฏุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
                children_db_stored = guardian.children_count
                wives_db_stored = guardian.wives_count
                family_db_stored = guardian.family_members_count
                
                # ุงูุนุฏุงุฏุงุช ุงููุนููุฉ ูู ุงูุนูุงูุงุช
                children_db_actual = guardian.children.count()
                wives_db_actual = guardian.wives.count()
                family_db_actual = 1 + children_db_actual + wives_db_actual
                
                # ููุงุฑูุฉ ุงูุนุฏุงุฏุงุช
                excel_vs_stored_match = (
                    children_excel == children_db_stored and 
                    wives_excel == wives_db_stored and 
                    family_excel == family_db_stored
                )
                
                excel_vs_actual_match = (
                    children_excel == children_db_actual and 
                    wives_excel == wives_db_actual and 
                    family_excel == family_db_actual
                )
                
                stored_vs_actual_match = (
                    children_db_stored == children_db_actual and 
                    wives_db_stored == wives_db_actual and 
                    family_db_stored == family_db_actual
                )
                
                if excel_vs_stored_match and stored_vs_actual_match:
                    counters_match += 1
                else:
                    counters_mismatch += 1
                    mismatches.append({
                        'national_id': national_id,
                        'name': name,
                        'children_excel': children_excel,
                        'children_db_stored': children_db_stored,
                        'children_db_actual': children_db_actual,
                        'wives_excel': wives_excel,
                        'wives_db_stored': wives_db_stored,
                        'wives_db_actual': wives_db_actual,
                        'family_excel': family_excel,
                        'family_db_stored': family_db_stored,
                        'family_db_actual': family_db_actual,
                        'excel_vs_stored_match': excel_vs_stored_match,
                        'excel_vs_actual_match': excel_vs_actual_match,
                        'stored_vs_actual_match': stored_vs_actual_match
                    })
                
            except Guardian.DoesNotExist:
                not_found_in_db += 1
                print(f"โ ุบูุฑ ููุฌูุฏ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {national_id} - {name}")
        
        # ุทุจุงุนุฉ ุงููุชุงุฆุฌ
        print()
        print("=" * 80)
        print("ููุฎุต ุงููุชุงุฆุฌ:")
        print("=" * 80)
        print(f"ุฅุฌูุงูู ุงูุณุฌูุงุช ูู Excel: {len(df)}")
        print(f"ููุฌูุฏ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {found_in_db}")
        print(f"ุบูุฑ ููุฌูุฏ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {not_found_in_db}")
        print(f"ุงูุนุฏุงุฏุงุช ูุชุทุงุจูุฉ: {counters_match}")
        print(f"ุงูุนุฏุงุฏุงุช ุบูุฑ ูุชุทุงุจูุฉ: {counters_mismatch}")
        print()
        
        # ุทุจุงุนุฉ ุชูุงุตูู ุนุฏู ุงูุชุทุงุจู
        if mismatches:
            print("ุชูุงุตูู ุนุฏู ุงูุชุทุงุจู:")
            print("=" * 80)
            
            for i, mismatch in enumerate(mismatches[:10], 1):  # ุฃูู 10 ููุท
                print(f"{i}. {mismatch['name']} ({mismatch['national_id']})")
                print(f"   ุงูุฃุทูุงู - Excel: {mismatch['children_excel']}, "
                      f"DB ุงููุญููุธ: {mismatch['children_db_stored']}, "
                      f"DB ุงููุนูู: {mismatch['children_db_actual']}")
                print(f"   ุงูุฒูุฌุงุช - Excel: {mismatch['wives_excel']}, "
                      f"DB ุงููุญููุธ: {mismatch['wives_db_stored']}, "
                      f"DB ุงููุนูู: {mismatch['wives_db_actual']}")
                print(f"   ุงูุนุงุฆูุฉ - Excel: {mismatch['family_excel']}, "
                      f"DB ุงููุญููุธ: {mismatch['family_db_stored']}, "
                      f"DB ุงููุนูู: {mismatch['family_db_actual']}")
                print(f"   Excel vs ุงููุญููุธ: {'โ' if mismatch['excel_vs_stored_match'] else 'โ'}")
                print(f"   Excel vs ุงููุนูู: {'โ' if mismatch['excel_vs_actual_match'] else 'โ'}")
                print(f"   ุงููุญููุธ vs ุงููุนูู: {'โ' if mismatch['stored_vs_actual_match'] else 'โ'}")
                print()
            
            if len(mismatches) > 10:
                print(f"... ู {len(mismatches) - 10} ุญุงูุงุช ุฃุฎุฑู")
        
        # ุชูุตูุงุช
        print("=" * 80)
        print("ุงูุชูุตูุงุช:")
        print("=" * 80)
        
        if counters_mismatch > 0:
            print("๐ง ูููุตุญ ุจุชุดุบูู ุฅุญุฏู ุงูุนูููุงุช ุงูุชุงููุฉ:")
            print("   1. ุงุณุชุฎุฏุงู 'ุชุญุฏูุซ ูู Excel' ูุชุทุจูู ุงูุนุฏุงุฏุงุช ูู ููู Excel")
            print("   2. ุงุณุชุฎุฏุงู 'ุฅุตูุงุญ ุงูุนุฏุงุฏุงุช' ูุญุณุงุจ ุงูุนุฏุงุฏุงุช ูู ุงูุจูุงูุงุช ุงููุนููุฉ")
            print("   3. ุฅุนุงุฏุฉ ุงุณุชูุฑุงุฏ ููู Excel ูุน ุงูุชุฃูุฏ ูู ุตุญุฉ ุงูุนุฏุงุฏุงุช")
        else:
            print("โ ุฌููุน ุงูุนุฏุงุฏุงุช ูุชุทุงุจูุฉ!")
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ูุฑุงุกุฉ ุงูููู: {str(e)}")

def main():
    if len(sys.argv) != 2:
        print("ุงูุงุณุชุฎุฏุงู: python check_excel_counters.py <ูุณุงุฑ_ููู_Excel>")
        print("ูุซุงู: python check_excel_counters.py guardians.xlsx")
        return
    
    excel_file = sys.argv[1]
    
    if not os.path.exists(excel_file):
        print(f"โ ุงูููู ุบูุฑ ููุฌูุฏ: {excel_file}")
        return
    
    if not excel_file.endswith('.xlsx'):
        print("โ ูุฌุจ ุฃู ูููู ุงูููู ุจุตูุบุฉ .xlsx")
        return
    
    check_excel_vs_database(excel_file)

if __name__ == "__main__":
    main() 